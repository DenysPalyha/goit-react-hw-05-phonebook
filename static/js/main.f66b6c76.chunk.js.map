{"version":3,"sources":["Components/ContactList/Contact.module.scss","Components/ContactForm/ContactForm.module.scss","Components/Filter/Filter.module.scss","Components/Notification/Notification.module.scss","Components/Layout/Layout.module.scss","Components/Contacts/Contacts.module.scss","Components/Layout/Layout.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactListItem.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/Notification/Notification.js","Components/Contacts/Contacts.js","Components/App/App.js","index.js"],"names":["module","exports","Layout","children","className","styles","ContactForm","state","name","number","handleChage","e","target","value","setState","hendleSubmit","preventDefault","props","onContactsAdd","reset","this","onSubmit","contactForm","formLable","type","onChange","formInput","formButton","Component","ContactListItem","contact","deleteContacts","contactListItems","contactInfo","contactInfoParagraph","span","onClick","contactInfoButton","ContactList","tasks","TransitionGroup","component","contactList","map","CSSTransition","key","id","timeout","classNames","unmountOnExit","Filter","onChangeFilter","filterLable","filterInput","Notifications","container","Notification","findContact","contacts","find","item","toLowerCase","Contacts","filter","isOpenModal","changeFilter","addContacts","contactFind","contactToAdd","uuidv4","setTimeout","onDeleteContacts","contsctParsed","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","visibleContacts","includes","getContacts","in","appear","titleH1","length","App","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.f66b6c76.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"Contact_contactList__1j20x\",\"contactListItems\":\"Contact_contactListItems__3YftV\",\"contactInfo\":\"Contact_contactInfo__6xdn5\",\"contactInfoParagraph\":\"Contact_contactInfoParagraph__k4mw_\",\"span\":\"Contact_span__1fjv4\",\"contactInfoButton\":\"Contact_contactInfoButton__1JtDv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__5WxU4\",\"formLable\":\"ContactForm_formLable__2xXFt\",\"formInput\":\"ContactForm_formInput__2RDNr\",\"formButton\":\"ContactForm_formButton__2TUoW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__35arL\",\"filterLable\":\"Filter_filterLable__28rAu\",\"filterInput\":\"Filter_filterInput__1schl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Notification_container__2sZqw\",\"Notification\":\"Notification_Notification__rAujB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__4-NNI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleH1\":\"Contacts_titleH1__3AC13\"};","import React from 'react';\r\nimport styles from './Layout.module.scss';\r\n\r\nconst Layout = ({ children }) => (\r\n  <div className={styles.Layout}>{children}</div>\r\n);\r\n\r\nexport default Layout;\r\n","import React, { Component } from 'react';\r\nimport styles from './ContactForm.module.scss';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChage = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  hendleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onContactsAdd({ ...this.state });\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.hendleSubmit} className={styles.contactForm}>\r\n        <lable className={styles.formLable}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChage}\r\n            className={styles.formInput}\r\n          />\r\n        </lable>\r\n        <lable className={styles.formLable}>\r\n          Number\r\n          <input\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChage}\r\n            className={styles.formInput}\r\n          />\r\n        </lable>\r\n        <button className={styles.formButton} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Contact.module.scss';\r\n\r\nconst ContactListItem = ({ contact, deleteContacts }) => {\r\n  return (\r\n    <li className={styles.contactListItems}>\r\n      <div className={styles.contactInfo}>\r\n        <p className={styles.contactInfoParagraph}>\r\n          {contact.name} <span className={styles.span}>{contact.number}</span>\r\n        </p>\r\n        <button\r\n          type=\"button\"\r\n          onClick={deleteContacts}\r\n          className={styles.contactInfoButton}\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  deleteContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport ContactListItem from './ContactListItem';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport styles from './Contact.module.scss';\r\nimport './Transition/ContactTransition.css';\r\n\r\nconst ContactList = ({ tasks, deleteContacts }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={styles.contactList}>\r\n      {tasks.map(contact => (\r\n        <CSSTransition\r\n          key={contact.id}\r\n          timeout={250}\r\n          classNames=\"contact-item-fade\"\r\n          unmountOnExit\r\n        >\r\n          <ContactListItem\r\n            key={contact.id}\r\n            contact={contact}\r\n            deleteContacts={() => deleteContacts(contact.id)}\r\n          />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  tasks: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\r\n  deleteContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.scss\";\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <div className={styles[\"filter\"]}>\r\n      <label className={styles.filterLable}>\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={(e) => onChangeFilter(e.target.value)}\r\n          className={styles.filterInput}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport styles from './Notification.module.scss';\r\n\r\nconst Notifications = () => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <p className={styles.Notification}>Contact already exists!</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React, { Component } from 'react';\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport Filter from '../Filter/Filter';\r\nimport Notification from '../Notification/Notification';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styles from '../Contacts/Contacts.module.scss';\r\nimport './Transition/contactsTransition.css';\r\nimport '../Notification/transition/NotificationTransition.css';\r\nimport '../Filter/Transition/FilterTransition.css';\r\nimport '../ContactList/Transition/ContactTransition.css';\r\n\r\nconst getContacts = (contacts, filter) => {\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n};\r\n\r\nconst findContact = (contacts, contact) =>\r\n  contacts.find(item => item.name.toLowerCase() === contact.name.toLowerCase());\r\n\r\nclass Contacts extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n    isOpenModal: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contsctParsed = localStorage.getItem('contacts');\r\n\r\n    if (contsctParsed) {\r\n      this.setState({\r\n        contacts: JSON.parse(contsctParsed),\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  changeFilter = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  addContacts = contact => {\r\n    const contactFind = findContact(this.state.contacts, contact);\r\n\r\n    const contactToAdd = {\r\n      ...contact,\r\n      id: uuidv4(),\r\n    };\r\n\r\n    if (contact.name) {\r\n      if (contactFind) {\r\n        this.setState({ isOpenModal: true });\r\n        setTimeout(() => this.setState({ isOpenModal: false }), 3000);\r\n      } else {\r\n        this.setState(state => ({\r\n          contacts: [...state.contacts, contactToAdd],\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n  onDeleteContacts = id => {\r\n    this.setState(state => ({\r\n      contacts: state.contacts.filter(contact => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter, isOpenModal } = this.state;\r\n    const visibleContacts = getContacts(contacts, filter);\r\n    return (\r\n      <div>\r\n        <CSSTransition\r\n          in={true}\r\n          appear={true}\r\n          timeout={500}\r\n          classNames=\"titel-Logo\"\r\n          unmountOnExit\r\n        >\r\n          <h1 className={styles.titleH1}>Phonebook</h1>\r\n        </CSSTransition>\r\n\r\n        <ContactForm onContactsAdd={this.addContacts} />\r\n\r\n        <CSSTransition\r\n          in={contacts.length > 1}\r\n          timeout={250}\r\n          classNames=\"filter-transition\"\r\n          unmountOnExit\r\n        >\r\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\r\n        </CSSTransition>\r\n\r\n        <CSSTransition\r\n          in={contacts.length > 0}\r\n          timeout={250}\r\n          classNames=\"contact-item-fade\"\r\n          unmountOnExit\r\n        >\r\n          <ContactList\r\n            tasks={visibleContacts}\r\n            deleteContacts={this.onDeleteContacts}\r\n          />\r\n        </CSSTransition>\r\n\r\n        <CSSTransition\r\n          in={isOpenModal}\r\n          appear={true}\r\n          timeout={250}\r\n          classNames=\"notification-Transition\"\r\n          unmountOnExit\r\n        >\r\n          <Notification />\r\n        </CSSTransition>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport Layout from '../Layout/Layout';\r\nimport Contacts from '../Contacts/Contacts';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Layout>\r\n      <Contacts />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './Components/App/App';\n\nReactDom.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}